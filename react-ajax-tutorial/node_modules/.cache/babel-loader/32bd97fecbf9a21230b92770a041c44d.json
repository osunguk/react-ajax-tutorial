{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\src\\\\containers\\\\PostContainer\\\\PostContainer.js\";\nimport React, { Component } from 'react';\nimport { PostWrapper, Navigate, Post } from '../../components';\nimport * as service from '../../services/post';\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super(); // initializes component state\n\n    this.handleNavigateClick = type => {\n      const postId = this.state.postId;\n\n      if (type === 'NEXT') {\n        this.fetchPostInfo(postId + 1);\n      } else {\n        this.fetchPostInfo(postId - 1);\n      }\n    };\n\n    this.fetchPostInfo = async postId => {\n      this.setState({\n        fetching: true // requesting..\n\n      }); // wait for two promises\n\n      const info = await Promise.all([service.getPost(postId), service.getComments(postId)]); // Object destructuring Syntax,\n      // takes out required values and create references to them\n\n      const _info$0$data = info[0].data,\n            title = _info$0$data.title,\n            body = _info$0$data.body;\n      const comments = info[1].data;\n      this.setState({\n        postId,\n        post: {\n          title,\n          body\n        },\n        comments,\n        fetching: false // done!\n\n      });\n    };\n\n    this.state = {\n      postId: 1,\n      fetching: false,\n      // tells whether the request is waiting for response or not\n      post: {\n        title: null,\n        body: null\n      },\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPostInfo(1);\n  }\n\n  render() {\n    const _this$state = this.state,\n          postId = _this$state.postId,\n          fetching = _this$state.fetching,\n          post = _this$state.post,\n          comments = _this$state.comments;\n    return React.createElement(PostWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Navigate, {\n      postId: postId,\n      disabled: fetching,\n      onClick: this.handleNavigateClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Post, {\n      title: post.title,\n      body: post.body,\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PostContainer;","map":{"version":3,"sources":["C:\\Users\\ZB-PC079\\Desktop\\VELOPERT\\react-ajax-tutorial\\src\\containers\\PostContainer\\PostContainer.js"],"names":["React","Component","PostWrapper","Navigate","Post","service","PostContainer","constructor","props","handleNavigateClick","type","postId","state","fetchPostInfo","setState","fetching","info","Promise","all","getPost","getComments","data","title","body","comments","post","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,IAAhC,QAA4C,kBAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAEpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YADiB,CAEjB;;AAFiB,SAcnBC,mBAdmB,GAcIC,IAAD,IAAU;AAC9B,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAA1B;;AAEA,UAAGD,IAAI,KAAK,MAAZ,EAAoB;AAChB,aAAKG,aAAL,CAAmBF,MAAM,GAAC,CAA1B;AACH,OAFD,MAEO;AACH,aAAKE,aAAL,CAAmBF,MAAM,GAAC,CAA1B;AACH;AACJ,KAtBoB;;AAAA,SA4BnBE,aA5BmB,GA4BH,MAAOF,MAAP,IAAkB;AAEhC,WAAKG,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE,CACG;;AADH,OAAd,EAFgC,CAMhC;;AACA,YAAMC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC7Bb,OAAO,CAACc,OAAR,CAAgBR,MAAhB,CAD6B,EAE7BN,OAAO,CAACe,WAAR,CAAoBT,MAApB,CAF6B,CAAZ,CAAnB,CAPgC,CAYhC;AACA;;AAbgC,2BAcRK,IAAI,CAAC,CAAD,CAAJ,CAAQK,IAdA;AAAA,YAcxBC,KAdwB,gBAcxBA,KAdwB;AAAA,YAcjBC,IAdiB,gBAcjBA,IAdiB;AAgBhC,YAAMC,QAAQ,GAAGR,IAAI,CAAC,CAAD,CAAJ,CAAQK,IAAzB;AAEA,WAAKP,QAAL,CAAc;AACZH,QAAAA,MADY;AAEZc,QAAAA,IAAI,EAAE;AACJH,UAAAA,KADI;AAEJC,UAAAA;AAFI,SAFM;AAMZC,QAAAA,QANY;AAOZT,QAAAA,QAAQ,EAAE,KAPE,CAOI;;AAPJ,OAAd;AAUD,KAxDkB;;AAGjB,SAAKH,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,CADG;AAEXI,MAAAA,QAAQ,EAAE,KAFC;AAEM;AACjBU,MAAAA,IAAI,EAAE;AACJH,QAAAA,KAAK,EAAE,IADH;AAEJC,QAAAA,IAAI,EAAE;AAFF,OAHK;AAOXC,MAAAA,QAAQ,EAAE;AAPC,KAAb;AASD;;AAYDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,aAAL,CAAmB,CAAnB;AACD;;AAgCDc,EAAAA,MAAM,GAAG;AAAA,wBACsC,KAAKf,KAD3C;AAAA,UACCD,MADD,eACCA,MADD;AAAA,UACSI,QADT,eACSA,QADT;AAAA,UACmBU,IADnB,eACmBA,IADnB;AAAA,UACyBD,QADzB,eACyBA,QADzB;AAGP,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAEb,MADV;AAEE,MAAA,QAAQ,EAAEI,QAFZ;AAGE,MAAA,OAAO,EAAE,KAAKN,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEgB,IAAI,CAACH,KADd;AAEE,MAAA,IAAI,EAAEG,IAAI,CAACF,IAFb;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;;AA7EmC;;AAgFtC,eAAelB,aAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { PostWrapper, Navigate, Post } from '../../components'\r\nimport * as service from '../../services/post'\r\n\r\nclass PostContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    // initializes component state\r\n    this.state = {\r\n      postId: 1,\r\n      fetching: false, // tells whether the request is waiting for response or not\r\n      post: {\r\n        title: null,\r\n        body: null\r\n      },\r\n      comments: []\r\n    };\r\n  }\r\n\r\n  handleNavigateClick = (type) => {\r\n    const postId = this.state.postId;\r\n\r\n    if(type === 'NEXT') {\r\n        this.fetchPostInfo(postId+1);\r\n    } else {\r\n        this.fetchPostInfo(postId-1);\r\n    }\r\n}\r\n\r\n  componentDidMount() {\r\n    this.fetchPostInfo(1);\r\n  }\r\n\r\n  fetchPostInfo = async (postId) => {\r\n\r\n    this.setState({\r\n      fetching: true // requesting..\r\n    });\r\n\r\n    // wait for two promises\r\n    const info = await Promise.all([\r\n      service.getPost(postId),\r\n      service.getComments(postId)\r\n    ]);\r\n\r\n    // Object destructuring Syntax,\r\n    // takes out required values and create references to them\r\n    const { title, body } = info[0].data;\r\n\r\n    const comments = info[1].data;\r\n\r\n    this.setState({\r\n      postId,\r\n      post: {\r\n        title,\r\n        body\r\n      },\r\n      comments,\r\n      fetching: false // done!\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { postId, fetching, post, comments } = this.state;\r\n\r\n    return (\r\n      <PostWrapper>\r\n        <Navigate\r\n          postId={postId}\r\n          disabled={fetching}\r\n          onClick={this.handleNavigateClick}\r\n        />\r\n        <Post\r\n          title={post.title}\r\n          body={post.body}\r\n          comments={comments}\r\n        />\r\n      </PostWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostContainer;"]},"metadata":{},"sourceType":"module"}