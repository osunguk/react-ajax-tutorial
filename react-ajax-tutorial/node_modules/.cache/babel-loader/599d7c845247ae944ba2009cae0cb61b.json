{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ZB-PC079\\\\Desktop\\\\VELOPERT\\\\react-ajax-tutorial\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{PostWrapper,Navigate,Post,Warning}from'../../components';import*as service from'../../services/post';var PostContainer=/*#__PURE__*/function(_Component){_inherits(PostContainer,_Component);function PostContainer(props){var _this;_classCallCheck(this,PostContainer);_this=_possibleConstructorReturn(this,_getPrototypeOf(PostContainer).call(this));// initializes component state\n_this.showWarning=function(){_this.setState({warningVisibility:true});setTimeout(function(){_this.setState({warningVisibility:false});},1500);};_this.handleNavigateClick=function(type){var postId=_this.state.postId;if(type==='NEXT'){_this.fetchPostInfo(postId+1);}else{_this.fetchPostInfo(postId-1);}};_this.fetchPostInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(postId){var info,_info$0$data,title,body,comments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({fetching:true// requesting..\n});_context.prev=1;_context.next=4;return Promise.all([service.getPost(postId),service.getComments(postId)]);case 4:info=_context.sent;// Object destructuring Syntax,\n// takes out required values and create references to them\n_info$0$data=info[0].data,title=_info$0$data.title,body=_info$0$data.body;comments=info[1].data;_this.setState({postId:postId,post:{title:title,body:body},comments:comments,fetching:false// done!\n});_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);// if error, stop at this point\n_this.setState({fetching:false});_this.showWarning();case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={postId:1,fetching:false,// tells whether the request is waiting for response or not\npost:{title:null,body:null},comments:[],warningVisibility:false};return _this;}_createClass(PostContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchPostInfo(1);}},{key:\"render\",value:function render(){var _this$state=this.state,postId=_this$state.postId,fetching=_this$state.fetching,post=_this$state.post,comments=_this$state.comments,warningVisibility=_this$state.warningVisibility;return React.createElement(PostWrapper,null,React.createElement(Navigate,{postId:postId,disabled:fetching,onClick:this.handleNavigateClick}),React.createElement(Post,{postId:postId,title:post.title,body:post.body,comments:comments}),React.createElement(Warning,{visible:warningVisibility,message:\"That post does not exist\"}));}}]);return PostContainer;}(Component);export default PostContainer;","map":{"version":3,"sources":["C:\\Users\\ZB-PC079\\Desktop\\VELOPERT\\react-ajax-tutorial\\src\\containers\\PostContainer\\PostContainer.js"],"names":["React","Component","PostWrapper","Navigate","Post","Warning","service","PostContainer","props","showWarning","setState","warningVisibility","setTimeout","handleNavigateClick","type","postId","state","fetchPostInfo","fetching","Promise","all","getPost","getComments","info","data","title","body","comments","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { PostWrapper, Navigate, Post, Warning } from '../../components'\r\nimport * as service from '../../services/post'\r\n\r\nclass PostContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    // initializes component state\r\n    this.state = {\r\n      postId: 1,\r\n      fetching: false, // tells whether the request is waiting for response or not\r\n      post: {\r\n        title: null,\r\n        body: null\r\n      },\r\n      comments: [],\r\n      warningVisibility: false\r\n    };\r\n  }\r\n\r\n  showWarning = () => {\r\n    this.setState({\r\n      warningVisibility: true\r\n    })\r\n\r\n    setTimeout(\r\n      () => {\r\n        this.setState({\r\n          warningVisibility: false\r\n        })\r\n      }, 1500\r\n    )\r\n  }\r\n\r\n  handleNavigateClick = (type) => {\r\n    const postId = this.state.postId;\r\n\r\n    if (type === 'NEXT') {\r\n      this.fetchPostInfo(postId + 1);\r\n    } else {\r\n      this.fetchPostInfo(postId - 1);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPostInfo(1);\r\n  }\r\n\r\n  fetchPostInfo = async (postId) => {\r\n\r\n    this.setState({\r\n      fetching: true // requesting..\r\n    });\r\n\r\n    try {\r\n      // wait for two promises\r\n      const info = await Promise.all([\r\n        service.getPost(postId),\r\n        service.getComments(postId)\r\n      ]);\r\n\r\n      // Object destructuring Syntax,\r\n      // takes out required values and create references to them\r\n      const { title, body } = info[0].data;\r\n\r\n      const comments = info[1].data;\r\n\r\n      this.setState({\r\n        postId,\r\n        post: {\r\n          title,\r\n          body\r\n        },\r\n        comments,\r\n        fetching: false // done!\r\n      });\r\n    } catch (e) {\r\n      // if error, stop at this point\r\n      this.setState({\r\n        fetching: false\r\n      })\r\n      this.showWarning();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { postId, fetching, post, comments, warningVisibility } = this.state;\r\n\r\n    return (\r\n      <PostWrapper>\r\n        <Navigate\r\n          postId={postId}\r\n          disabled={fetching}\r\n          onClick={this.handleNavigateClick}\r\n        />\r\n        <Post\r\n          postId={postId}\r\n          title={post.title}\r\n          body={post.body}\r\n          comments={comments}\r\n        />\r\n        <Warning visible={warningVisibility} message=\"That post does not exist\" />\r\n      </PostWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostContainer;"]},"metadata":{},"sourceType":"module"}